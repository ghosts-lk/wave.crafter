name: CI

on:
  push:
    branches:
      - main # Trigger CI on push to the main branch
  pull_request:
    branches:
      - main # Trigger CI on pull requests targeting the main branch

jobs:
  build:
    runs-on: ubuntu-latest # Use the latest Ubuntu environment for the CI job

    steps:
      - name: Checkout code
        uses: actions/checkout@v3 # Check out the repository code

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libfontconfig1-dev \
            libglib2.0-dev \
            libcairo2-dev \
            libatk1.0-dev \
            libpango1.0-dev \
            libgdk-pixbuf2.0-dev \
            libgtk-3-dev # Install all required system dependencies

      - name: Cache Cargo registry
        uses: actions/cache@v3
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Cache Cargo build
        uses: actions/cache@v3
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-build-

      - name: Set up Rust
        uses: actions-rs/toolchain@v1 # Set up the Rust toolchain
        with:
          toolchain: stable # Use the stable Rust toolchain for compatibility

      - name: Build project
        run: cargo build --release # Build the project in release mode to ensure optimized binaries

      - name: Run tests
        run: cargo test # Run the test suite to verify functionality and correctness

      - name: Run integration tests
        run: cargo test --test integration_test.rs # Correct test file name
